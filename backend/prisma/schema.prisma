// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Event {
  id                   Int                  @id @default(autoincrement())
  event_start          DateTime
  event_end            DateTime
  capacity             Int
  image                String?
  name                 String
  is_confirmed         Boolean
  venue                Venue                @relation(fields: [venue_id], references: [id], onDelete: Cascade)
  venue_id             Int
  categories_to_events CategoriesToEvents[]
  created_by           User                 @relation(fields: [created_by_id], references: [id])
  created_by_id        Int
  participants         UsersToEvents[]
  admission            Admission[]
}

model Category {
  id                 Int                  @id @default(autoincrement())
  name               String
  is_confirmed       Boolean
  parent_category    Category?            @relation("ChildCategories", fields: [parent_category_id], references: [id])
  parent_category_id Int?
  child_categories   Category[]           @relation("ChildCategories")
  CategoriesToEvents CategoriesToEvents[]
  created_by         User                 @relation(fields: [created_by_id], references: [id])
  created_by_id      Int
}

model CategoriesToEvents {
  event_id    Int
  category_id Int

  event    Event    @relation(fields: [event_id], references: [id])
  category Category @relation(fields: [category_id], references: [id])

  @@id([event_id, category_id])
}

model Venue {
  id            Int     @id @default(autoincrement())
  name          String
  city          String
  street        String
  postal_code   String
  country       String
  image         String?
  description   String  @db.VarChar(500)
  is_confirmed  Boolean
  created_by    User    @relation(fields: [created_by_id], references: [id])
  created_by_id Int

  Event Event[]
}

enum UserRole {
  ADMIN
  MODERATOR
  AUTH_USER
}

model User {
  id            Int             @id @default(autoincrement())
  username      String          @unique
  password      String
  firstname     String
  lastname      String
  email         String          @unique
  birthday      DateTime
  role          UserRole
  crated_events Event[]
  participates  UsersToEvents[]
  Category      Category[]
  Venue         Venue[]
}

model UsersToEvents {
  event_id Int
  user_id  Int

  event Event @relation(fields: [event_id], references: [id])
  user  User  @relation(fields: [user_id], references: [id])

  rating       Int?
  text_review  String?
  admission_id Int?
  admission    Admission? @relation(fields: [admission_id], references: [id])
  is_paid      Boolean    @default(false)

  @@id([event_id, user_id])
}

enum Currency {
  CZK
  USD
  EUR
  PLN
  GBP
  JPY
  AUD
}

model Admission {
  id            Int             @id @default(autoincrement())
  price         Int
  currency      Currency
  type          String
  event         Event           @relation(fields: [event_id], references: [id])
  event_id      Int
  UsersToEvents UsersToEvents[]
}
